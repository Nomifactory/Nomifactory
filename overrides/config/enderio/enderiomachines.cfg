# Configuration file

alloysmelter {
    # Operating profile for the Enhanced Alloy Smelter. Restaring the game is needed for a change to be reflected in JEI. (synced from server) [default: AUTO]
    S:profileEnhancedAlloy=AUTO

    # Operating profile for the Alloy Smelter. Restaring the game is needed for a change to be reflected in JEI. (synced from server) [default: AUTO]
    S:profileNormal=AUTO

    # Operating profile for the Simple Alloy Smelter. Restaring the game is needed for a change to be reflected in JEI. (synced from server) [default: SIMPLE_ALLOY]
    S:profileSimpleAlloy=SIMPLE_ALLOY

    # Operating profile for the Simple Furnace. Restaring the game is needed for a change to be reflected in JEI. (synced from server) [default: SIMPLE_FURNACE]
    S:profileSimpleFurnace=SIMPLE_FURNACE

    # If true, the Simple Alloy Smelter will respect gravity and fall like an anvil when not attached to a block. (synced from server) [default: true]
    B:respectsGravitySimple=true
}


attractor {
    # Maximum number of mobs any Attraction Obelisk can attract at any time. (synced from server) [range: 1 ~ 64, default: 20]
    I:maxMobsAttracted=20
}


client {
    # Which color should blood have? (RED, GREEN, AUTO) [default: AUTO]
    S:bloodColor=AUTO
    I:bloodEnabled=0

    # If true, only a handful of sample painter recipes will be shown in JEI. Enable this if you have timing problems starting a world or logging into a server. [default: true]
    B:jeiUseShortenedPainterRecipes=true
}


crafter {
    # If true, the Simple Crafter will respect gravity and fall like an anvil when not attached to a block. (synced from server) [default: true]
    B:respectsGravitySimple=false
}


experience {
    # Millibuckets per tick that can get in or out. (synced from server) [range: 1 ~ 1000000000, default: 200]
    I:maxIO=200
}


farm {
    # Disable the notification text above the farm block. [default: false]
    B:disableFarmNotification=false

    # If enabled, the farming area will receive some additional growth ticks. Disabling this can improve performance on budy servers (synced from server) [default: true]
    B:enableCarefulCare=true

    # The chance that bonemeal will be tried. (synced from server) [range: 0.0 ~ 1.0, default: 0.75]
    D:farmBonemealChance=0.75

    # The delay (in blocks) between an unsuccessful bonemealing and the next try. (synced from server) [range: 0 ~ 2147483647, default: 4]
    I:farmBonemealDelayFail=4

    # The delay (in blocks) between a successful bonemealing and the next try. (synced from server) [range: 0 ~ 2147483647, default: 16]
    I:farmBonemealDelaySuccess=16

    # The amount of energy an unsuccessful bonemealing uses. (synced from server) [range: 0 ~ 2147483647, default: 80]
    I:farmBonemealEnergyUseFail=80

    # The amount of energy a successful bonemealing uses. (synced from server) [range: 0 ~ 2147483647, default: 160]
    I:farmBonemealEnergyUseSuccess=160

    # The amount of energy harvesting a block with an axe uses. (synced from server) [range: 0 ~ 2147483647, default: 1000]
    I:farmHarvestAxeEnergyUse=1000

    # The amount of energy harvesting a block with anything else but an axe uses. (synced from server) [range: 0 ~ 2147483647, default: 500]
    I:farmHarvestEnergyUse=500

    # The amount of energy planting a seed uses. (synced from server) [range: 0 ~ 2147483647, default: 0]
    I:farmPlantEnergyUse=0

    # The amount of saplings the farm has to have in reserve to switch to shearing all leaves. If there are less saplings in store, it will only shear part the leaves and break the others for saplings. Set this to 0 to always shear all leaves. (synced from server) [range: 0 ~ 64, default: 8]
    I:farmSaplingReserveAmount=8

    # If this is enabled the farm will stop if there is not at least one empty output slot. Otherwise it will only stop if all output slots are full. (synced from server) [default: true]
    B:farmStopOnNoOutputSlots=true

    # The amount of energy tilling the ground uses. (synced from server) [range: 0 ~ 2147483647, default: 0]
    I:farmTillEnergyUse=0

    # The chance that a tool will take damage when used. (synced from server) [range: 0.0 ~ 1.0, default: 1.0]
    D:farmToolDamageChance=1.0

    # The amount of water in mB that flows into the tankl when it rains. (Note: Vanilla Cauldron=333) (synced from server) [range: 0 ~ 1000, default: 100]
    I:rainWaterAmount=100

    # The chance that rain will flow into the tank. Set to 0 to disable. (Note: Vanilla Cauldron=0.05) (synced from server) [range: 0.0 ~ 1.0, default: 1.0]
    D:rainWaterChance=1.0

    # If enabled, output overflow will be queued, otherwise it will spill. (synced from server) [default: true]
    B:useOutputQueue=true

    # The amount of water in mB that is used every time the Farming Station boosts a plant. Setting this to 0 disables the need for water in the tank. (synced from server) [range: 0 ~ 1000, default: 0]
    I:waterCarefulCare=0

    # If this is enabled the farm will show water particles when watering farmland. [default: true]
    B:waterFarmlandParticles=true

    # The amount of water in mB that is used every time a farmland block tries to dry out. Setting this to 0 disables the need for water in the tank. (synced from server) [range: 0 ~ 1000, default: 1]
    I:waterPerFarmland=1

    # The size of the water tank in mB. Setting this to 0 disables the tank and forces waterPerFarmland/waterCarefulCare to 0. (synced from server) [range: 0 ~ 64000, default: 2000]
    I:waterTankSize=2000
}


generator {

    combustion {
        # How large should the fuel and coolant tanks of the combustion generator be? (synced from server) [range: 500 ~ 50000, default: 5000]
        I:combGenTankSize=5000
    }

    lavagen {
        # Chance that active cooling will evaporate water blocks. Set to 0 to disable. (synced from server) [range: 0.0 ~ 1.0, default: 0.5]
        D:activeCoolingEvaporatesWater=0.5

        # Chance that active cooling will liquefy icd blocks. Set to 0 to disable. (synced from server) [range: 0.0 ~ 1.0, default: 0.25]
        D:activeCoolingLiquefiesIce=0.25

        # The amount of heat gained per tick when generating. (synced from server) [range: 0 ~ 64, default: 4]
        I:heatGain=4

        # The amount of heat lost per tick when actively cooled with a cold fluid block. Note that only one neighbor is checked per tick. (synced from server) [range: 0 ~ 64, default: 3]
        I:heatLossActive=3

        # The amount of heat lost per tick. (synced from server) [range: 0 ~ 64, default: 1]
        I:heatLossPassive=1

        # The maximum heat that can be reached, as factor of the time it takes to process one bucket of lava. (synced from server) [range: 1 ~ 64, default: 8]
        I:maxHeatFactor=8

        # The minimum efficiency the machine will not go under even when fully heated up. (synced from server) [range: 0.0 ~ 1.0, default: 0.05]
        D:minEfficiency=0.05000000074505806

        # The amount of lava (in mB) needed to generate one block of cobble/stone/obsidian. (synced from server) [range: 1 ~ 64000, default: 1000]
        I:outputAmount=1000

        # When enabled, cooled down lava will turn into cobble. The type of output depends on the type of cooling. (synced from server) [default: true]
        B:outputCobbleEnabled=true

        # When enabled, cooled down lava will turn into obsidian. The type of output depends on the type of cooling. (synced from server) [default: true]
        B:outputObsidianEnabled=true

        # When enabled, cooled down lava will turn into stone. The type of output depends on the type of cooling. (synced from server) [default: true]
        B:outputStoneEnabled=true

        # The heat percentage above which the machine will overheat and set things on fire. (synced from server) [range: 0.0 ~ 1.0, default: 0.8]
        D:overheatThreshold=0.800000011920929

        # The size of the lava tank. (synced from server) [range: 1 ~ 64000, default: 4000]
        I:tankSize=4000

        # When enabled, the vanilla burn time for a bucket of lava is used. When disabled, the current burn time (which could be changed by any mod) is used. (synced from server) [default: true]
        B:useVanillaBurnTime=true
    }

    solar {
        # When enabled Photovoltaic Panels of different kinds can join together as a multi-block (synced from server) [default: false]
        B:canSolarTypesJoin=false

        # Cost in XP levels of the Simple Solar upgrade. (synced from server) [range: 1 ~ 2147483647, default: 4]
        I:darkSteelSolar0Cost=4

        # Energy generated per SECOND by the Simple Solar upgrade. Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 10]
        I:darkSteelSolar0Gen=10

        # Cost in XP levels of the Solar I upgrade. (synced from server) [range: 1 ~ 2147483647, default: 8]
        I:darkSteelSolar1Cost=8

        # Energy generated per SECOND by the Solar I upgrade. Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 40]
        I:darkSteelSolar1Gen=40

        # Cost in XP levels of the Solar II upgrade. (synced from server) [range: 1 ~ 2147483647, default: 16]
        I:darkSteelSolar2Cost=16

        # Energy generated per SECOND by the Solar II upgrade. Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 80]
        I:darkSteelSolar2Gen=80

        # Cost in XP levels of the Solar III upgrade. (synced from server) [range: 1 ~ 2147483647, default: 24]
        I:darkSteelSolar3Cost=24

        # Energy generated per SECOND by the Solar III upgrade. Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 160]
        I:darkSteelSolar3Gen=160

        # Cost in XP levels of the Solar IV upgrade (Endergy). (synced from server) [range: 1 ~ 2147483647, default: 28]
        I:darkSteelSolar4Cost=28

        # Energy generated per SECOND by the Solar IV upgrade (Endergy). Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 960]
        I:darkSteelSolar4Gen=960

        # Cost in XP levels of the Solar V upgrade (Endergy). (synced from server) [range: 1 ~ 2147483647, default: 32]
        I:darkSteelSolar5Cost=32

        # Energy generated per SECOND by the Solar V upgrade (Endergy). Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 5760]
        I:darkSteelSolar5Gen=5760

        # Cost in XP levels of the Solar VI upgrade (Endergy). (synced from server) [range: 1 ~ 2147483647, default: 36]
        I:darkSteelSolar6Cost=36

        # Energy generated per SECOND by the Solar VI upgrade (Endergy). Split between all equipped DS armors. (synced from server) [range: 1 ~ 2147483647, default: 34560]
        I:darkSteelSolar6Gen=34560
        I:darkSteelSolarOneCost=4
        I:darkSteelSolarOneGen=10
        I:darkSteelSolarThreeCost=24
        I:darkSteelSolarThreeGen=160
        I:darkSteelSolarTwoCost=8
        I:darkSteelSolarTwoGen=40

        # If enabled allows the solar upgrade to charge non-darksteel armors that the player is wearing. (synced from server) [default: true]
        B:helmetChargeOthers=true

        # Energy generated per TICK by Simple Photovoltaic Panels. (synced from server) [range: 1 ~ 2147483647, default: 10]
        I:solarPanel0Gen=10

        # Energy generated per TICK by Photovoltaic Panels. (synced from server) [range: 1 ~ 2147483647, default: 40]
        I:solarPanel1Gen=40

        # Energy generated per TICK by Advanced Photovoltaic Panels. (synced from server) [range: 1 ~ 2147483647, default: 80]
        I:solarPanel2Gen=80

        # Energy generated per TICK by Vibrant Photovoltaic Panels. (synced from server) [range: 1 ~ 2147483647, default: 160]
        I:solarPanel3Gen=160

        # Energy generated per TICK by Compressed Photovoltaic Panels (Endergy). (synced from server) [range: 1 ~ 2147483647, default: 960]
        I:solarPanel4Gen=960

        # Energy generated per TICK by Concentrated Photovoltaic Panels (Endergy). (synced from server) [range: 1 ~ 2147483647, default: 5760]
        I:solarPanel5Gen=5760

        # Energy generated per TICK by Ultimate Photovoltaic Panels (Endergy). (synced from server) [range: 1 ~ 2147483647, default: 34560]
        I:solarPanel6Gen=34560
        I:solarPanelFourOutput=160
        I:solarPanelOneOutput=10
        I:solarPanelThreeOutput=80
        I:solarPanelTwoOutput=40

        # When enabled Photovoltaic Panels accept Liquid Sunshine directly above them as source of sunlight. (synced from server) [default: true]
        B:solarPoweredBySunshine=true

        # How often (in ticks) the Photovoltaic Panels should check the sun's angle. (synced from server) [range: 1 ~ 2147483647, default: 100]
        I:solarRecalcSunTick=100
    }

    zombie {
        # How full does the tank need to be for the zombie head to produce energy?. (0.0-0.9995) (synced from server) [range: 0.0 ~ 0.9995, default: 0.7]
        D:minimumTankLevel=0.699999988079071

        # The number of ticks one bucket of fuel lasts. (synced from server) [range: 1 ~ 2147483647, default: 12000]
        I:ticksPerBucketOfFuel=12000
    }

    ender {
        D:minimumTankLevel=0.699999988079071
        I:ticksPerBucketOfFuel=96000
    }

    stirling {
        # If true, the Simple Stirling Generator will respect gravity and fall like an anvil when not attached to a block. (synced from server) [default: true]
        B:respectsGravitySimple=true
    }

}


impulse_hopper {
    # How many ticks should it take for each operation? (Note: This scales quadratically with the capacitor) (synced from server) [range: 1 ~ 20, default: 20]
    I:impulseHopperWorkEveryTick=20
}


inhibitor {
    # When true, slimes wont be allowed to spawn at all. Only added to aid testing in super flat worlds. (synced from server) [default: false]
    B:stopAllSlimes=false

    # When true, squid wont be allowed to spawn at all. Only added to aid testing in super flat worlds. (synced from server) [default: false]
    B:stopAllSquid=false
}


killerjoe {
    # The reach of attacks above and below Joe. (synced from server) [range: 1.0 ~ 32.0, default: 2.0]
    D:killerJoeAttackHeight=2.0

    # The reach of attacks in front of Joe. (synced from server) [range: 1.0 ~ 32.0, default: 4.0]
    D:killerJoeAttackLength=4.0

    # The reach of attacks to each side of Joe. (synced from server) [range: 1.0 ~ 32.0, default: 2.0]
    D:killerJoeAttackWidth=2.0

    # The distance from which XP will be gathered above and below Joe. (only used when killerMendingEnabled is enabled) (synced from server) [range: 1.0 ~ 32.0, default: 2.0]
    D:killerJoeHooverXpHeight=2.0

    # The distance from which XP will be gathered in front of Joe. (only used when killerMendingEnabled is enabled) (synced from server) [range: 1.0 ~ 32.0, default: 10.0]
    D:killerJoeHooverXpLength=10.0

    # The distance from which XP will be gathered to each side of Joe. (only used when killerMendingEnabled is enabled) (synced from server) [range: 1.0 ~ 32.0, default: 5.0]
    D:killerJoeHooverXpWidth=5.0

    # Set whether the Killer Joe can attack through blocks. (synced from server) [default: false]
    B:killerJoeMustSee=false

    # The number of millibuckets of nutrient fluid used per attack. (synced from server) [range: 1 ~ 2147483647, default: 5]
    I:killerJoeNutrientUsePerAttackMb=5

    # If enabled, the Killer Joe will pick up XP for the enchantement 'Mending' on the weapon. (synced from server) [default: true]
    B:killerMendingEnabled=true

    # If enabled, Creepers will explode for the Killer Joe just like for any player. (synced from server) [default: false]
    B:killerProvokesCreeperExplosions=false

    # If enabled, Zombies will summon help for the Killer Joe just like for any player. (synced from server) [default: false]
    B:killerProvokesZombieHordes=false

    # Set whether the Killer Joe swings even if PvP is off (that swing will do nothing unless killerPvPoffIsIgnored is enabled). (synced from server) [default: false]
    B:killerPvPoffDisablesSwing=false

    # Set whether the Killer Joe ignores PvP settings and always hits players (killerPvPoffDisablesSwing must be off for this to work). (synced from server) [default: false]
    B:killerPvPoffIsIgnored=false
}


niard {
    # Is the Niard allowed to place water in the Nether? (synced from server) [default: false]
    B:allowWaterInHell=false
}


personal {
    B:enableAlloySmelterAlloyingJEI=true
    B:enableAlloySmelterFurnaceJEI=true
    B:enableCombustionGenJEI=true
    B:enableEnchanterJEI=true
    B:enableEnderGenJEI=true
    B:enableGrindingBallsJEI=true
    B:enableLavaGeneratorJEI=true
    B:enablePainterJEI=true
    B:enableSliceAndSpliceJEI=true
    B:enableSolarJEI=true
    B:enableSoulBinderJEI=true
    B:enableStirlingGenJEI=true
    B:enableTankFluidInOutJEI=true
    B:enableTankMendingJEI=true
    B:enableVatJEI=true
    B:enableWeatherObeliskJEI=true
    B:enableWiredChargerJEI=true
    B:enableZombieGenJEI=true
}


sagmill {
    # If true, the Simple SAG Mill will respect gravity and fall like an anvil when not attached to a block. (synced from server) [default: true]
    B:respectsGravitySimple=true
}


slicensplice {
    # The chance that a tool will take damage each tick while the Slice'n'Splice is running (0 = no chance, 1 = 100% chance). Tools will always take damage when the crafting is finished. (synced from server) [range: 0.0 ~ 1.0, default: 0.01]
    D:toolDamageChance=0.009999999776482582
}


soulbinder {
    # Amount of XP fluid in mB the Soul Binder can accept per tick. (synced from server) [range: 1 ~ 2147483647, default: 50]
    I:soulFluidInputRate=50

    # Amount of XP fluid in mB that can be extracted from the Soul Binder per tick. (synced from server) [range: 1 ~ 2147483647, default: 50]
    I:soulFluidOutputRate=50
}


spawner {
    # Disable the notification text above the block. [default: false]
    B:disableNotification=false
    B:homeZoneEnabled=true
    I:homeZoneLimit=16
    I:homeZoneSize=30

    # The number of levels it costs to add a broken spawner (synced from server) [range: 1 ~ 2147483647, default: 16]
    I:powerSpawnerAddSpawnerCost=16

    # If true, spawners for all mobs will be added to the creative menu. Otherwise only a handfull of samples are added. (Client setting.) [default: false]
    B:poweredSpawnerAddAllMobsCreative=false

    # Number of seconds in which spawned entities are protected from despawning (synced from server) [range: 0 ~ 107374182, default: 120]
    I:poweredSpawnerDespawnTimeSeconds=120

    # Max tick delay between spawns for a non-upgraded spawner (synced from server) [range: 1 ~ 2147483647, default: 800]
    I:poweredSpawnerMaxDelayTicks=800

    # Max number of entities in the nearby area until no more are spawned. A zero value will remove this check (synced from server) [range: 0 ~ 2147483647, default: 6]
    I:poweredSpawnerMaxNearbyEntities=6

    # Max distance of the closest player for the spawner to be active. A zero value will remove the player check (synced from server) [range: 0 ~ 64, default: 0]
    I:poweredSpawnerMaxPlayerDistance=0

    # Number of tries to find a suitable spawning location (synced from server) [range: 1 ~ 9, default: 3]
    I:poweredSpawnerMaxSpawnTries=3

    # Min tick delay between spawns for a non-upgraded spawner (synced from server) [range: 1 ~ 2147483647, default: 200]
    I:poweredSpawnerMinDelayTicks=200

    # Number of entities to spawn each time (synced from server) [range: 1 ~ 16, default: 4]
    I:poweredSpawnerSpawnCount=4

    # Spawning range in X/Z (vanilla=4) (synced from server) [range: 1 ~ 32, default: 4]
    I:poweredSpawnerSpawnRange=4

    # If true, other mods can prevent spawning mobs (synced from server) [default: true]
    B:poweredSpawnerUseForgeSpawnChecks=true

    # If true, regular spawn checks such as lighting level and dimension will be made before spawning mobs (synced from server) [default: false]
    B:poweredSpawnerUseVanillaSpawnChecks=false

    creative {
        # If true, creative spawners sill set the homezone on spawned creatures. Note that bats, ghast, slimes and squid are not creatures. (synced from server) [default: true]
        B:homeZoneEnabled=true

        # The maximum number of mobs allowed in the homezone. When there are more, no new ones will be spawned. Radius in blocks. No effect if homeZoneEnabled is off. Note that poweredSpawnerMaxNearbyEntities still applies for mobs within the poweredSpawnerSpawnRange. (synced from server) [range: -2147483648 ~ 2147483647, default: 16]
        I:homeZoneLimit=16

        # The size of the homezone. Radius in blocks. No effect if homeZoneEnabled is off. (synced from server) [range: -2147483648 ~ 2147483647, default: 30]
        I:homeZoneSize=30
    }

}


tank {
    # If true, the tank can mend items enchanted with Mending using liquid XP. (synced from server) [default: true]
    B:allowMending=true

    # If true, the tank can void items when filled with a hot fluid. (synced from server) [default: true]
    B:allowVoiding=true

    # When trashing items in lava, should a tiny amount more lava be produced? Trashing items in other hot liquids will NOT have this effect. (synced from server) [default: BLOCKS_ONLY]
    S:smeltTrashIntoLava=BLOCKS_ONLY

    # The size of an advanced tank in mB. (synced from server) [range: 0 ~ 2147483647, default: 32000]
    I:tankSizeAdvanced=32000

    # The size of a normal tank in mB. (synced from server) [range: 0 ~ 2147483647, default: 16000]
    I:tankSizeNormal=16000
    B:tankSmeltTrashIntoLava=true
}


telepad {
    # The type of fluid required to teleport entities. (synced from server) [default: ender_distillation]
    S:telepadFluidType=ender_distillation

    # The max amount of fluid in mb used per teleport. If set to 0 fluid use will be disabled (synced from server) [range: 0 ~ 2147483647, default: 50]
    I:telepadFluidUse=50

    # If true, TelePads will also act as normal Travel Anchors. (synced from server) [default: true]
    B:telepadIsTravelAnchor=true

    # If true, the coordinates cannot be set via the GUI, the coord selector must be used. (synced from server) [default: true]
    B:telepadLockCoords=true

    # If true, the dimension cannot be set via the GUI, the coord selector must be used. (synced from server) [default: true]
    B:telepadLockDimension=true

    # Power for a teleport is calculated by the formula:
    # power = [this value] * ln(0.005*distance + 1) (synced from server) [range: 0 ~ 2147483647, default: 100000]
    I:telepadPowerCoefficient=100000

    # The amount of RF required for an interdimensional teleport. (synced from server) [range: 0 ~ 2147483647, default: 100000]
    I:telepadPowerInterdimensional=100000

    # Can be used to disable the 'shrinking' effect of the telepad in case of conflicts with other mods. (client setting) [default: true]
    B:telepadShrinkEffect=true
}


tranceiver {
    # The energy cost of transporting a bucket of fluid via a Dimensional Transceiver. (synced from server) [range: 0 ~ 2147483647, default: 100]
    I:bucketEnergyCost=100

    # Amount of energy lost when transfered by Dimensional Transceiver; 0 is no loss, 1 is 100% loss. (synced from server) [range: 0.0 ~ 1.7976931348623157E308, default: 0.1]
    D:energyLoss=0.1
}


vacuum {
    # Maximum number of items the vacuum chest can effect at a time. (-1 for unlimited) (synced from server) [range: -1 ~ 2147483647, default: 40]
    I:vacuumChestMaxItems=40

    # The maximum range of the vacuum chest (synced from server) [range: 1 ~ 32, default: 6]
    I:vacuumChestRange=6

    # The range of the XP vacuum (synced from server) [range: 1 ~ 32, default: 6]
    I:vacuumXPRange=6

    # Velocity multiplier for attracting XP orbs (synced from server) [range: 0.01 ~ 0.5, default: 0.1]
    D:vacuumXPVelocity=0.1
}


vat {
    # Size of the Vat's input tank in mB. (synced from server) [range: 1 ~ 2147483647, default: 8000]
    I:vatInputTankSize=8000

    # Size of the Vat's output tank in mB. (synced from server) [range: 1 ~ 2147483647, default: 8000]
    I:vatOutputTankSize=8000
}


weather {
    # Size of the internal tank of the weather obelisk. (synced from server) [range: 5 ~ 2147483647, default: 8000]
    I:tankSize=8000
    I:weatherObeliskClearFluid=2000

    # The fluid amount required (in mB) to set the world to clear weather. (synced from server) [range: 5 ~ 2147483647, default: 2000]
    I:weatherObeliskClearFluidAmount=2000

    # The fluid required to set the world to clear weather. (synced from server) [default: liquid_sunshine]
    S:weatherObeliskClearFluidType=liquid_sunshine
    I:weatherObeliskRainFluid=500

    # The fluid amount required (in mB) to set the world to rainy weather. (synced from server) [range: 5 ~ 2147483647, default: 500]
    I:weatherObeliskRainFluidAmount=500

    # The fluid required to set the world to rainy weather. (synced from server) [default: cloud_seed]
    S:weatherObeliskRainFluidType=cloud_seed
    I:weatherObeliskThunderFluid=1000

    # The fluid amount required (in mB) to set the world to thundering weather. (synced from server) [range: 5 ~ 2147483647, default: 1000]
    I:weatherObeliskThunderFluidAmount=1000

    # The fluid required to set the world to thundering weather. (synced from server) [default: cloud_seed_concentrated]
    S:weatherObeliskThunderFluidType=cloud_seed_concentrated
}


wireless {
    # If enabled, only a single wireless charger can carge a player even if multipe are in range. (synced from server) [default: false]
    B:singleCharger=false

    # The range of wireless chargers (block version). (synced from server) [range: 1 ~ 160, default: 16]
    I:wirelessRange=16

    # The range of wireless chargers (antenna version). (synced from server) [range: 1 ~ 160, default: 24]
    I:wirelessRangeAntenna=24

    # The range of wireless chargers (enhanced antenna version). (synced from server) [range: 1 ~ 160, default: 64]
    I:wirelessRangeEnhancedAntenna=64

    # The range of wireless chargers (extension antennas). (synced from server) [range: 1 ~ 160, default: 128]
    I:wirelessRangeEnhancedAntennaExtension=128
}


xpobelisk {
    # Maximum level of XP the xp obelisk can contain. (synced from server) [range: 1 ~ 320127979, default: 320127979]
    I:maxLevelsStored=320127979
}


