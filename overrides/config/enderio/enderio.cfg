# Configuration file

blink {
    # Blocks that cannot be blinked through. (synced from server) [default: [Thaumcraft:blockWarded]]
    S:blockBlacklist <
        minecraft:bedrock
        Thaumcraft:blockWarded
     >

    # Minimum number of ticks between 'blinks'. Values of 10 or less allow a limited sort of flight. (synced from server) [range: -2147483648 ~ 2147483647, default: 10]
    I:cooldown=10

    # Allow using travel items to 'blink' (teleport without a target)? (synced from server) [default: true]
    B:enableBlink=true

    # Allow blinking through non-solid (transparent/partial) blocks? (synced from server) [default: true]
    B:enableBlinkThroughNonSolidBlocks=true

    # Allow blinking through solid blocks? (synced from server) [default: true]
    B:enableBlinkThroughSolidBlocks=true

    # Allow blinking through unbreakable (e.g. bedrock) blocks? (synced from server) [default: false]
    B:enableBlinkThroughUnbreakableBlocks=true

    # Allow using blink when in offhand? (synced from server) [default: true]
    B:enableOffHandBlink=true

    # Allow travelling to blocks when in offhand? (synced from server) [default: true]
    B:enableOffHandTravel=true
}


blocks {
    D:darkSteelAnvilDamageChance=0.024000000208616257

    # Speed boost, in blocks per tick, that the DS ladder gives over the vanilla ladder. (synced from server) [range: 0.0 ~ 0.6, default: 0.06]
    D:darkSteelLadderSpeedBoost=0.05999999865889549

    charges {

        confusion {
            # Numer of ticks the confusion effect active. Scales with distance from the expolosion. (synced from server) [range: 1 ~ 3000, default: 300]
            I:duration=300

            # The range of the confusion charge's effect. (synced from server) [range: 1.0 ~ 99.0, default: 6.0]
            D:range=6.0
        }

        ender {
            # The range of the ender charge's effect. (synced from server) [range: 1.0 ~ 99.0, default: 6.0]
            D:range=6.0
        }

    }

    glass {
        # If true, quite clear glass will connect textures with fused quartz. [default: false]
        B:clearGlassConnectToFusedQuartz=false

        # If true, quite clear glass and fused quartz of different colors will connect textures. [default: true]
        B:glassConnectToTheirColorVariants=true

        # If true, quite clear glass and fused quartz will connect textures with their respective enlightened and darkened variants. [default: true]
        B:glassConnectToTheirVariants=true

        # If true, painted glowstone will drop dust unless broken with silk touch. (synced from server) [default: false]
        B:paintedGlowstoneRequireSilkTouch=false
    }

    dark_steel_anvil {
        # Chance that the Dark Steel Anvil will take damage after repairing something. (Vanilla anvil is 0.12) (synced from server) [range: 0.0 ~ 1.0, default: 0.024]
        D:damageChance=0.024000000208616257

        # Total amount of Dark Steel (in nuggets) that goes into the Dark Steel Anvil's crafting recipe. Used when recycling the broken anvil. Default is 3 blocks and 4 ingots. (synced from server) [range: 0 ~ 729, default: 279]
        I:materialWorth=279

        # Maximum enchantment cost the Dark Steel Anvil can handle. Also applies to the Anvil Upgrade. (synced from server) [range: 40 ~ 400, default: 80]
        I:maxCost=80

        # Maximum amount of materials that will drop when recycling a broken Dark Steel Anvil. (0 = nothing, 1 = everything) (synced from server) [range: 0.0 ~ 1.0, default: 1.0]
        D:maxDrop=1.0

        # Qanta of a source block of Holier Fog. Equates to the number of blocks that can be covered if the Holier Fog flows maximally. (synced from server) [range: 16 ~ 4096, default: 128]
        I:maxQuanty=128

        # Minimum amount of materials that will drop when recycling a broken Dark Steel Anvil. (0 = nothing, 1 = everything) (synced from server) [range: 0.0 ~ 1.0, default: 0.25]
        D:minDrop=0.25
    }

}


brokenspawner {
    # The chance a broken spawner will be dropped when a spawner is broken. 1 = 100% chance, 0 = 0% chance (synced from server) [range: 0.0 ~ 1.0, default: 1.0]
    D:brokenSpawnerDropChance=1.0

    # When a spawner is broken with these tools it will not drop a broken spawner. (synced from server) [default: [item:rotarycraft:rotarycraft_item_bedpick]]
    S:brokenSpawnerToolBlacklist <
        item:rotarycraft:rotarycraft_item_bedpick
     >
}


diagnostics {
    # If true, TEs will flash when they trigger a chunk re-render. [default: false]
    B:debugChunkRerenders=false

    # If enabled, debug level configurations will be check at startup. Disable if you don't want to see the result in the logfile. [default: true]
    B:debugComplainAboutForgeLogging=true

    # This will change profiler interactions. DO NOT change unless asked by an Ender IO developer! [default: true]
    B:debugProfilerAntiNuclearActivist=true

    # This will change profiler interactions. DO NOT change unless asked by an Ender IO developer! [default: true]
    B:debugProfilerResetOnServerTick=true

    # This will flood your logfile with gigabytes of data filling up your harddisk very fast. DO NOT enable unless asked by an Ender IO developer! [default: false]
    B:debugProfilerTracer=false

    # If enabled, debug level log messages will not be generated. Disabling this can put vital information into the debug log for dealing with rare issues but will also slow down the game. This value is only checked once when the game starts. [default: true]
    B:debugSuppressDebugMessages=true

    # This will flood your logfile with gigabytes of data filling up your harddisk very fast. DO NOT enable unless asked by an Ender IO developer! [default: false]
    B:debugTraceCapLimitsExtremelyDetailed=false

    # This will flood your logfile with gigabytes of data filling up your harddisk very fast. DO NOT enable unless asked by an Ender IO developer! [default: false]
    B:debugTraceNBTActivityExtremelyDetailed=false

    # This will flood your logfile with gigabytes of data filling up your harddisk very fast. DO NOT enable unless asked by an Ender IO developer! [default: false]
    B:debugTraceTELivecycleExtremelyDetailed=false

    # If true, TEs will flash when they recieve an update packet. [default: false]
    B:debugUpdatePackets=false

    # This will flood your logfile with gigabytes of data filling up your harddisk very fast. DO NOT enable unless asked by an Ender IO developer! [default: false]
    B:debugUpgradeDebugMessagesToInfo=false

    # Experimental: When enabled, this will chunkload the involved chunks of a (potential) long-range teleport for 5 seconds. This is intended to prevent the server from losing track of the player. Symptoms would be the player being invisible to other players, not being able to interact with pressure plates, or being stuck in beds. [default: true]
    B:experimentalChunkLoadTeleport=true

    # Should TEs protected their maximum energy input against multiple inserts? [default: SOFT]
    S:protectAgainstEnergyOverflow=HARD
}


enchanter {
    # Base level cost added to all recipes in the enchanter. (synced from server) [range: 0 ~ 2147483647, default: 2]
    I:baseLevelCost=2

    # The lapis cost is enchant level multiplied by this value. (synced from server) [range: 0.0 ~ 1.7976931348623157E308, default: 3.0]
    D:lapisCostFactor=3.0

    # The final XP cost for an enchantment is multiplied by this value. To halve costs set to 0.5, to double them set it to 2. (synced from server) [range: 0.0 ~ 1.7976931348623157E308, default: 0.75]
    D:levelCostFactor=0.75
}


enchantments {
    B:repellentEnabled=true
    I:repellentMaxEnchantabilityBase=10
    I:repellentMaxEnchantabilityPerLevel=10
    I:repellentMinEnchantabilityBase=10
    I:repellentMinEnchantabilityPerLevel=5
    S:repellentRarity=VERY_RARE
    B:shimmerEnabled=true
    I:shimmerMaxEnchantability=100
    I:shimmerMinEnchantability=1
    S:shimmerRarity=VERY_RARE
    B:soulboundEnabled=true
    I:soulboundMaxEnchantability=60
    I:soulboundMinEnchantability=16
    S:soulboundRarity=VERY_RARE
    B:witherArrowEnabled=true
    I:witherArrowMaxEnchantability=50
    I:witherArrowMinEnchantability=20
    S:witherArrowRarity=UNCOMMON
    B:witherWeaponEnabled=true
    I:witherWeaponMaxEnchantability=50
    I:witherWeaponMinEnchantability=20
    S:witherWeaponRarity=UNCOMMON

    repellent {
        # Base chance to teleport. (synced from server) [range: 0.0 ~ 1.0, default: 0.35]
        D:chanceBase=0.3499999940395355

        # Chance to teleport per level. (synced from server) [range: 0.01 ~ 1.0, default: 0.1]
        D:chancePerLevel=0.10000000149011612

        # Should Repellent be acquirable? If disabled, it will still work but it will not be possible to apply it to items. (synced from server) [default: true]
        B:enabled=true

        # Maximum enchantability for Repellent, base value. (synced from server) [range: 1 ~ 100, default: 10]
        I:maxEnchantabilityBase=10

        # Maximum enchantability for Repellent, per level. (synced from server) [range: 1 ~ 100, default: 10]
        I:maxEnchantabilityPerLevel=10

        # Maximum enchantment level. (Restart your game after changing this.) (synced from server) [range: 1 ~ 10, default: 4]
        I:maxLevel=4

        # Minimum enchantability for Repellent, base value. (synced from server) [range: 1 ~ 100, default: 10]
        I:minEnchantabilityBase=10

        # Minimum enchantability for Repellent, per level. (synced from server) [range: 1 ~ 100, default: 5]
        I:minEnchantabilityPerLevel=5

        # Base teleport range. (synced from server) [range: 0.0 ~ 64.0, default: 8.0]
        D:rangeBase=8.0

        # Teleport range per level. (synced from server) [range: 0.0 ~ 64.0, default: 8.0]
        D:rangePerLevel=8.0

        # Rarity for Repellent. (synced from server) [default: VERY_RARE]
        S:rarity=VERY_RARE

        # Probability that non-players will be teleported to a safe target location. (Player always will be teleported safely.) (synced from server) [range: 0.0 ~ 1.0, default: 0.75]
        D:safeMobsChanc=0.75
    }

    shimmer {
        # Should Shimmer be acquirable? If disabled, it will still work but it will not be possible to apply it to items. (synced from server) [default: true]
        B:enabled=true

        # Maximum enchantability for Shimmer. (synced from server) [range: 1 ~ 100, default: 100]
        I:maxEnchantability=100

        # Minimum enchantability for Shimmer. (synced from server) [range: 1 ~ 100, default: 1]
        I:minEnchantability=1

        # Rarity for Shimmer. (synced from server) [default: VERY_RARE]
        S:rarity=VERY_RARE
    }

    witherarrow {
        # Should WitherArrow (Withering) be acquirable? If disabled, it will still work but it will not be possible to apply it to items. (synced from server) [default: true]
        B:enabled=true

        # Maximum enchantability for WitherArrow (Withering). (synced from server) [range: 1 ~ 100, default: 50]
        I:naxEnchantability=50

        # Rarity for WitherArrow (Withering). (synced from server) [default: UNCOMMON]
        S:rarity=UNCOMMON

        # Minimum enchantability for WitherArrow (Withering). (synced from server) [range: 1 ~ 100, default: 20]
        I:wninEnchantability=20
    }

    witherweapon {
        # Should WitherWeapon (Decay) be acquirable? If disabled, it will still work but it will not be possible to apply it to items. (synced from server) [default: true]
        B:enabled=true

        # Maximum enchantability for WitherWeapon (Decay). (synced from server) [range: 1 ~ 100, default: 50]
        I:maxEnchantability=50

        # Minimum enchantability for WitherWeapon (Decay). (synced from server) [range: 1 ~ 100, default: 20]
        I:minEnchantability=20

        # Rarity for WitherWeapon (Decay). (synced from server) [default: UNCOMMON]
        S:rarity=UNCOMMON
    }

    soulbound {
        # Should Soulbound be acquirable? If disabled, it will still work but it will not be possible to apply it to items. (synced from server) [default: true]
        B:enabled=true

        # Maximum enchantability for Soulbound. (synced from server) [range: 1 ~ 100, default: 60]
        I:maxEnchantability=60

        # Minimum enchantability for Soulbound. (synced from server) [range: 1 ~ 100, default: 16]
        I:minEnchantability=16

        # Rarity for Soulbound. (synced from server) [default: VERY_RARE]
        S:rarity=VERY_RARE
    }

}


farming {
    # Height (from initial block) for harvesting logs. (synced from server) [range: 1 ~ 255, default: 30]
    I:harvestHeight=30

    # Height (from initial block) for harvesting rubber trees. (synced from server) [range: 1 ~ 255, default: 30]
    I:harvestHeightRubberTree=30

    # Radius (in addition to farm area) for harvesting logs. (synced from server) [range: 1 ~ 64, default: 7]
    I:harvestRadius=7

    # Radius (in addition to farm area) for harvesting rubber trees. (synced from server) [range: 1 ~ 64, default: 7]
    I:harvestRadiusRubberTree=7
}


fluid {
    I:fireWaterPowerPerCycle=80
    I:fireWaterPowerTotalBurnTime=15000
    I:hootchPowerPerCycle=60
    I:hootchPowerTotalBurnTime=6000

    # The delay in ticks between when nutrient distillation boosts your food value. (synced from server) [range: 1 ~ 2147483647, default: 400]
    I:nutrientFoodBoostDelay=400

    # If enabled, Rocket Fuel will explode when in contact with fire. (synced from server) [default: true]
    B:rocketFuelIsExplosive=true
    I:rocketFuelPowerPerCycle=160
    I:rocketFuelPowerTotalBurnTime=7000
}


integration {
    # Enables the integration with Applied Energistics 2 (hoe). (must be kept in sync with server) [default: true]
    B:enableAE2=true

    # Enables the integration with Actually Additions (fertilizer, hoe). (must be kept in sync with server) [default: true]
    B:enableActuallyAdditions=true

    # Enables the integration with BaseMetals (hoe). (must be kept in sync with server) [default: true]
    B:enableBaseMetals=true

    # Enables the integration with Baubles. (synced from server) [default: true]
    B:enableBaubles=true

    # Enables the integration with Big/Extreme Reactors (fluids and blocks in reactor). (must be kept in sync with server) [default: true]
    B:enableBigReactors=true

    # Enables the integration with Biomes'o'Plenty (harvesting flowers). (must be kept in sync with server) [default: true]
    B:enableBoP=true

    # Enables the integration with Project Intelligence (ingame documentation). [default: true]
    B:enableProjectIntelligence=true

    # Registers aspects for Ender IO items with Thaumcraft. [default: true]
    B:enableThaumcraftAspects=true

    projectintelligence {
        # Margin around the documentation. [range: -2147483648 ~ 2147483647, default: 3]
        I:marginBottom=3

        # Margin around the documentation. [range: -2147483648 ~ 2147483647, default: 3]
        I:marginLeft=3

        # Margin around the documentation. [range: -2147483648 ~ 2147483647, default: 3]
        I:marginRight=3

        # Margin around the documentation. [range: -2147483648 ~ 2147483647, default: 3]
        I:marginTop=3
    }

}


items {

    food {
        # The probability that Enderios do what they promise. (synced from server) [range: 0.0 ~ 1.0, default: 0.3]
        D:enderiosTeleportChance=0.30000001192092896

        # The maximum range of a cerial-induced location change. (synced from server) [range: 1.5 ~ 128.0, default: 16.0]
        D:enderiosTeleportRange=16.0
    }

    magnet {
        # If true the magnet can be put into a Baubles slot even if switched off (requires Baubles to be installed and allowInBaublesSlot to be on). (synced from server) [default: false]
        B:allowDeactivatedInBaublesSlot=false

        # If true the magnet can be put into a Baubles slot (requires Baubles to be installed). (synced from server) [default: true]
        B:allowInBaublesSlot=true

        # If true the magnet will also work in the main inventory, not just the hotbar. (synced from server) [default: false]
        B:allowInMainInventory=false

        # The BaublesType the magnet should be, 'AMULET', 'RING' or 'BELT' (requires Baubles to be installed and allowInBaublesSlot to be on). (synced from server) [default: AMULET]
        S:baublesType=AMULET

        # These items will not be picked up by the magnet. (synced from server) [default: [appliedenergistics2:crystal_seed], [botania:livingrock], [botania:manatablet]]
        S:blacklist <
            appliedenergistics2:crystal_seed
            botania:livingrock
            botania:manatablet
         >

        # Amount of energy stored in a fully charged magnet. (synced from server) [range: 1 ~ 100000000, default: 100000]
        I:energyCapacity=100000

        # The amount of energy used per tick when the magnet is active. (synced from server) [range: 0 ~ 1000, default: 1]
        I:energyUsePerSecond=1

        # Maximum number of items the magnet can effect at a time. (-1 for unlimited) (synced from server) [range: -1 ~ 512, default: 20]
        I:itemLimit=20

        # Range of the magnet in blocks. (synced from server) [range: 1 ~ 128, default: 5]
        I:range=5
    }

    staffoflevity {
        # Duration for the levitation effect of the Staff of Levity. This is just a failsafe to prevent players from floating forever. (synced from server) [range: 1 ~ 86400, default: 255]
        I:durationSeconds=255

        # Amount of fluid stored by the Staff of Levity. (synced from server) [range: 1 ~ 64000, default: 8000]
        I:fluidStorage=8000

        # Type of fluid used by the Staff of Levity. (synced from server) [default: vapor_of_levity]
        S:fluidType=vapor_of_levity

        # Amount of fluid in mB used by the Staff of Levity. (synced from server) [range: 1 ~ 1000, default: 100]
        I:fluidUsePerTeleport=100

        # Ticks that must pass between activations of the Staff of Levity. (synced from server) [range: 1 ~ 12000, default: 10]
        I:ticksBetweenActivations=10
    }

    rodofreturn {
        # If set to false the Rod of Return can only target a telepad. (synced from server) [default: false]
        B:canTargetAnywhere=false

        # Amount of energy used by the Rod of Return each tick it is used. (synced from server) [range: 1 ~ 1000, default: 35000]
        I:energyPerTick=35000

        # Amount of fluid stored by the Rod of Return. (synced from server) [range: 1 ~ 64000, default: 200]
        I:fluidStorage=200

        # Type of fluid used by the Rod of Return. (synced from server) [default: ender_distillation]
        S:fluidType=ender_distillation

        # Amount of fluid in mB used by the Rod of Return. (0 to disable fluid use) (synced from server) [range: 0 ~ 1000, default: 200]
        I:fluidUsePerTeleport=200

        # Internal energy buffer for the Rod of Return. (synced from server) [range: 1 ~ 2147483647, default: 2000000]
        I:powerStorage=2000000

        # Number of ticks the Rod of Return must be used before teleporting. (synced from server) [range: 1 ~ 1200, default: 50]
        I:ticksToActivate=50

        # Min number of ticks required to recharge the internal energy buffer of the Rod of Return. (synced from server) [range: 1 ~ 1200, default: 100]
        I:ticksToRecharge=100
    }

    darksteel {
        # Should the dark steel placement, when in the first (0th) slot, place the item in the last slot. If false, will place what's in the second slot. [default: true]
        B:slotZeroPlacesEight=true

        pickaxe {
            # The increase in efficiency when powered. (synced from server) [range: 1.0 ~ 20.0, default: 2.0]
            D:efficiencyBoostWhenPowered=2.0

            # The efficiency when breaking obsidian with a powered Dark Pickaxe. (synced from server) [range: 1 ~ 500, default: 50]
            I:efficiencyObsidian=50

            # If set to a value > 0, the obsidian speed and power use will be used for all blocks with hardness >= to this value. (synced from server) [range: 1.0 ~ 10000.0, default: 40.0]
            D:obsidianEfficiencyAtHardness=40.0

            # The amount of energy used to break an obsidian block. (synced from server) [range: 1 ~ 99999999, default: 10000]
            I:powerUseObsidian=10000

            # Energy use per damage/durability point avoided. (synced from server) [range: 0 ~ 99999999, default: 750]
            I:powerUsePerDamagePoint=750

            # If enabled, right clicking with the dark steel pickaxe will place a block. [default: false]
            B:rightClickPlaceEnabled=false

            dark_steel_pickaxe {
                B:canMineTiCArdite=true
            }

            end_steel_pickaxe {
                B:canMineTiCArdite=true
            }

        }

        axe {
            # The increase in efficiency when powered. (synced from server) [range: 1.0 ~ 20.0, default: 2.0]
            D:efficiencyBoostWhenPowered=2.0

            # Height (from initial block) for multi-harvesting logs. (synced from server) [range: 1 ~ 255, default: 30]
            I:harvestHeight=30

            # Radius for multi-harvesting logs. (synced from server) [range: 1 ~ 64, default: 12]
            I:harvestRadius=12

            # Energy use per damage/durability point avoided. (synced from server) [range: 0 ~ 99999999, default: 750]
            I:powerUsePerDamagePoint=750

            # Energy per damage/durability point avoided when shift-harvesting multiple logs (synced from server) [range: 0 ~ 99999999, default: 1500]
            I:powerUsePerDamagePointMultiHarvest=1500

            # If enabled, right clicking with the dark steel axe will place a block. [default: false]
            B:rightClickPlaceEnabled=false

            # How much slower multi-harvesting logs is. (synced from server) [range: 1.0 ~ 40.0, default: 4.0]
            D:speedPenaltyMultiHarvest=4.0
        }

        crook {
            # Energy use per damage/durability point avoided. (synced from server) [range: 1 ~ 99999999, default: 150]
            I:energyPerDamage=150

            # Energy per damage/durability point avoided when shift-harvesting multiple blocks. (synced from server) [range: 1 ~ 99999999, default: 150]
            I:energyPerDamageMulti=150

            # Number of extra tries to get drops for a powered crook. (synced from server) [range: 0 ~ 32, default: 5]
            I:extraDropsPowered=5

            # Number of extra tries to get drops for an unpowered crook. (synced from server) [range: 0 ~ 32, default: 3]
            I:extraDropsUnpowered=3

            # If enabled, right clicking with the dark steel crook will place a block. [default: false]
            B:rightClickPlaceEnabled=false
        }

        sword {
            # The extra damage dealt when the sword is empowered I and has energy. (synced from server) [range: 0.0 ~ 32.0, default: 1.0]
            D:damageBonusEmpowered1=1.0

            # The extra damage dealt when the sword is empowered II and has energy. (synced from server) [range: 0.0 ~ 32.0, default: 2.0]
            D:damageBonusEmpowered2=2.0

            # The extra damage dealt when the sword is empowered III and has energy. (synced from server) [range: 0.0 ~ 32.0, default: 3.0]
            D:damageBonusEmpowered3=3.0

            # The extra damage dealt when the sword is empowered IV and has energy. (synced from server) [range: 0.0 ~ 32.0, default: 4.0]
            D:damageBonusEmpowered4=4.0

            # The extra damage dealt when the sword is empowered V and has energy. (synced from server) [range: 0.0 ~ 32.0, default: 5.0]
            D:damageBonusEmpowered5=5.0

            # The chance that an ender pearl will be dropped when using the sword (0 = no chance, 1 = 100% chance; can go over 100%). (synced from server) [range: 0.0 ~ 10.0, default: 1.05]
            D:enderPearlDropChance=1.05

            # The chance for each looting level that an additional ender pearl will be dropped when using a dark steel sword (0 = no chance, 1 = 100% chance; can go over 100%) (synced from server) [range: 0.0 ~ 5.0, default: 0.5]
            D:enderPearlDropChancePerLooting=0.5

            # The amount of energy used per hit. (synced from server) [range: 1 ~ 99999999, default: 750]
            I:powerUsePerHit=750

            # The increase in attack speed when the sword is empowered I and has energy. (synced from server) [range: 0.0 ~ 2.0, default: 0.4]
            D:speedBonusEmpowered1=0.4000000059604645

            # The increase in attack speed when the sword is empowered II and has energy. (synced from server) [range: 0.0 ~ 2.0, default: 0.45]
            D:speedBonusEmpowered2=0.44999998807907104

            # The increase in attack speed when the sword is empowered III and has energy. (synced from server) [range: 0.0 ~ 2.0, default: 0.5]
            D:speedBonusEmpowered3=0.5

            # The increase in attack speed when the sword is empowered IV and has energy. (synced from server) [range: 0.0 ~ 2.0, default: 0.55]
            D:speedBonusEmpowered4=0.550000011920929

            # The increase in attack speed when the sword is empowered V and has energy. (synced from server) [range: 0.0 ~ 2.0, default: 0.6]
            D:speedBonusEmpowered5=0.6000000238418579
        }

        shears {
            # The increase in effected area (radius) when powered and used on blocks. (synced from server) [range: 0 ~ 16, default: 4]
            I:blockAreaBoostWhenPowered=4

            # How much more durable as vanilla shears they are. (synced from server) [range: 0 ~ 50, default: 5]
            I:durabilityFactor=5

            # The increase in efficiency when powered. (synced from server) [range: 1.0 ~ 20.0, default: 2.0]
            D:efficiencyBoostWhenPowered=2.0

            # The increase in effected area (radius) when powered and used on sheep. (synced from server) [range: 0.0 ~ 16.0, default: 5.0]
            D:entityAreaBoostWhenPowered=5.0

            # Energy use per damage/durability point avoided. (synced from server) [range: 0 ~ 99999999, default: 250]
            I:powerUsePerDamagePoint=250
        }

        upgrades {
            # Comma-separated list of IDs of upgrades that should be disabled. Those upgrades will be registered with the game engine, but they will be removed from the list of available upgrades. Please note that this may not work well with upgrades that already exist on items. It will also not work well when other upgrades depend on them. (must be kept in sync with server) [default: ]
            S:disabled=

            hoe {
                # Number of levels required for the 'Hoe' upgrade. [range: -2147483648 ~ 2147483647, default: 4]
                I:darkSteelHoeCost=4
            }

            speed {
                # The extra effectiveness of the speed upgrade when the Leggings are empowered I and have energy. (synced from server) [range: 0.0 ~ 5.0, default: 1.0]
                D:empoweredBonus1=1.0

                # The extra effectiveness of the speed upgrade when the Leggings are empowered II and have energy. (synced from server) [range: 0.0 ~ 5.0, default: 1.1]
                D:empoweredBonus2=1.100000023841858

                # The extra effectiveness of the speed upgrade when the Leggings are empowered III and have energy. (synced from server) [range: 0.0 ~ 5.0, default: 1.5]
                D:empoweredBonus3=1.5

                # The extra effectiveness of the speed upgrade when the Leggings are empowered IV and have energy. (synced from server) [range: 0.0 ~ 5.0, default: 2.0]
                D:empoweredBonus4=2.0

                # The extra effectiveness of the speed upgrade when the Leggings are empowered V and have energy. (synced from server) [range: 0.0 ~ 5.0, default: 2.5]
                D:empoweredBonus5=2.5

                # Energy cost of running one block in the Dark Steel Leggings with Speed (any level). (synced from server) [range: 0 ~ 2147483647, default: 320]
                I:sprintEnergyCost=320
                D:sprintModifier1=0.10000000149011612
                D:sprintModifier2=0.30000001192092896
                D:sprintModifier3=0.5

                # Number of levels required for the 'Speed I' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost1=4

                # Number of levels required for the 'Speed II' upgrade. (synced from server) [range: 1 ~ 99, default: 6]
                I:upgradeCost2=6

                # Number of levels required for the 'Speed III' upgrade. (synced from server) [range: 1 ~ 99, default: 8]
                I:upgradeCost3=8

                # Energy cost of walking one block in the Dark Steel Leggings with Speed (any level). (synced from server) [range: 0 ~ 2147483647, default: 80]
                I:walkEnergyCost=80

                # Speed modifier applied by the Dark Steel Leggings with Speed I. (synced from server) [range: 0.0 ~ 32.0, default: 0.15]
                D:walkModifier1=0.15000000596046448

                # Speed modifier applied by the Dark Steel Leggings with Speed II. (synced from server) [range: 0.0 ~ 32.0, default: 0.3]
                D:walkModifier2=0.30000001192092896

                # Speed modifier applied by the Dark Steel Leggings with Speed III. (synced from server) [range: 0.0 ~ 32.0, default: 0.45]
                D:walkModifier3=0.44999998807907104
            }

            jump {
                # Jump height modifier applied when jumping with Dark Steel Boots equipped (synced from server) [range: 1.0 ~ 3.0, default: 1.5]
                D:modifier=1.5

                # Number of levels required for the 'Jump I' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost1=4

                # Number of levels required for the 'Jump II' upgrade. (synced from server) [range: 1 ~ 99, default: 6]
                I:upgradeCost2=6

                # Number of levels required for the 'Jump III' upgrade. (synced from server) [range: 1 ~ 99, default: 8]
                I:upgradeCost3=8
            }

            explosive {
                # Custom 'dirt' target blocks for the explosive upgrade. See 'targets'. (Used whith the 'spoon' upgrade.) (synced from server) [default: ]
                S:customDirt <
                 >

                # Custom 'stone' target blocks for the explosive upgrade. See 'targets'. (synced from server) [default: ]
                S:customStone <
                 >

                # Chance that employing the explosive upgrade to blow up extra blocks costs the pickaxe durability. (synced from server) [range: 0.0 ~ 1.0, default: 0.3]
                D:durabilityChance=0.30000001192092896

                # Extra energy the explosive upgrade uses to blow up blocks. This goes on top of the energy used to counteract durability loss. (synced from server) [range: 0 ~ 2147483647, default: 20]
                I:energyPerBlock=20

                # Which kinds of blocks should the explosive upgrade blow up? DEFAULT: Limited list of trash blocks. NO_INVENORY: All blocks that don't have a TileEntity.  CUSTOM: Only the blocks in the config values 'customStone'/'customDirt'. DEFAULT_AND_CUSTOM: Combines DEFAULT and CUSTOM. ALL: Anything (dangerous!)Use this in modpacks that have a large number of modded stone or dirt in their worldgen. (synced from server) [default: DEFAULT]
                S:targets=DEFAULT

                # Cost for the explosive I upgrade in levels. (synced from server) [range: 1 ~ 99, default: 8]
                I:upgradeCost1=8

                # Cost for the explosive II upgrade in levels. (synced from server) [range: 1 ~ 99, default: 12]
                I:upgradeCost2=12

                # Cost for the explosive III upgrade in levels. (synced from server) [range: 1 ~ 99, default: 18]
                I:upgradeCost3=18

                # Cost for the explosive IV upgrade in levels. (synced from server) [range: 1 ~ 99, default: 26]
                I:upgradeCost4=26

                # Cost for the explosive V upgrade in levels. (synced from server) [range: 1 ~ 99, default: 36]
                I:upgradeCost5=36

                carpet {
                    # Cost for the explosive depth upgrade in levels. (synced from server) [range: 1 ~ 99, default: 8]
                    I:upgradeCost=8
                }

            }

            empowered {
                # Cost for the 'Empowered I' upgrade in levels. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost1=4

                # Cost for the 'Empowered II' upgrade in levels. (synced from server) [range: 1 ~ 99, default: 8]
                I:upgradeCost2=8

                # Cost for the 'Empowered III' upgrade in levels. (synced from server) [range: 1 ~ 99, default: 12]
                I:upgradeCost3=12

                # Cost for the 'Empowered IV' upgrade in levels. (synced from server) [range: 1 ~ 99, default: 16]
                I:upgradeCost4=16

                # Cost for the 'Empowered V' upgrade in levels. (synced from server) [range: 1 ~ 99, default: 20]
                I:upgradeCost5=20
            }

            swim {
                # Speed modifier applied when swimming with the Dark Steel Boots with Flippers. (synced from server) [range: 0.1 ~ 10.0, default: 2.5]
                D:speed=2.5

                # Speed modifier applied when swimming with the Dark Steel Boots with Flippers enchanted with Depth Strider. (synced from server) [range: 0.002 ~ 10.0, default: 0.05]
                D:speedDepthStrider=0.05

                # Number of levels required for the 'Swim' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost=4
            }

            nightvision {
                # Number of levels required for the 'Night Vision' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost=4
            }

            theoneprobe {
                # Number of levels required for 'The One Probe' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost=4
            }

            glider {
                # Horizontal movement speed modifier when gliding. (synced from server) [range: 0.001 ~ 0.6, default: 0.03]
                D:horizontalSpeed=0.03

                # Number of levels required for the 'Glider' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost=4

                # Rate of altitude loss when gliding. (synced from server) [range: -1.0 ~ -0.001, default: -0.05]
                D:verticalSpeed=-0.05

                # Rate of altitude loss when sprinting and gliding. (synced from server) [range: -3.0 ~ -0.001, default: -0.15]
                D:verticalSpeedSprinting=-0.15
            }

            elytra {
                # Number of levels required for the 'Elytra' upgrade. (synced from server) [range: 1 ~ 99, default: 10]
                I:upgradeCost=10
            }

            soundlocator {
                # Number of ticks the 'Sound Locator' icons are displayed for. (synced from server) [range: 1 ~ 200, default: 40]
                I:lifespan=40

                # Range of the 'Sound Locator' upgrade. (synced from server) [range: 1 ~ 200, default: 40]
                I:range=40

                # Number of levels required for the 'Sound Locator' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost=4
            }

            direct {
                # Amount of energy used by the 'Direct' upgrade to pick up one stack of stuff. (synced from server) [range: 0 ~ 999999, default: 100]
                I:energyCost=100

                # Number of levels required for the 'Direct' upgrade. (synced from server) [range: 1 ~ 99, default: 8]
                I:upgradeCost=8
            }

            padding {
                # Distance in blocks that is no longer considered 'nearby' by the 'Padding' upgrade. Sounds at least this far away will play normally. [range: 1.0 ~ 99.0, default: 15.0]
                D:cutoffDistance=15.0

                # All sounds will be adjusted in pitch by this factor when using the 'Padding' upgrade. (1 for off [range: 0.01 ~ 1.0, default: 0.8]
                D:pitchAdjust=0.800000011920929

                # Number of levels required for the 'Padding' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost=4
            }

            gogglesofrevealing {
                # Number of levels required for the 'Goggles of Revealing' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost=4
            }

            thaumaturgerobes {
                # Number of levels required for the 'Thaumatruge's Robes' upgrades. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost=4
            }

            travel {
                # Number of levels required for the 'Travel' upgrade. (synced from server) [range: 1 ~ 99, default: 16]
                I:upgradeCost=16
            }

            spoon {
                # If enabled, right clicking with the spoon upgrade will make pahs like a vanilla shovel. This takes priority over block placing and travelling. [default: true]
                B:enablePathMaking=true

                # Number of levels required for the 'Spoon' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost=4
            }

            inventory {
                # Number of inventory columns the inventory upgrade gives for body armor. (synced from server) [default: COL9]
                S:columnsBody=COL9

                # Number of inventory columns the inventory upgrade gives for foot armor. (synced from server) [default: COL3]
                S:columnsFeet=COL3

                # Number of inventory columns the inventory upgrade gives for head armor. (synced from server) [default: COL1]
                S:columnsHead=COL1

                # Number of inventory columns the inventory upgrade gives for leg armor. (synced from server) [default: COL5]
                S:columnsLegs=COL5

                # Number of inventory columns the inventory I upgrade gives. (synced from server) [range: 1 ~ 6, default: 2]
                I:rows1=2

                # Number of inventory columns the inventory II upgrade gives. (synced from server) [range: 1 ~ 6, default: 4]
                I:rows2=4

                # Number of inventory columns the inventory III upgrade gives. (synced from server) [range: 1 ~ 6, default: 6]
                I:rows3=6

                # Maximum size (when serialized into a binary buffer) an itemstack can have to be allowed into a slot of the 'Inventory' upgrade. Note that having a player inventory that's over an uncertain size will crash the game and make a world unplayable. (synced from server) [range: 500 ~ 5000, default: 1337]
                I:slotLimitBytes=1337

                # Cost for the inventory I upgrade in levels. (synced from server) [range: 1 ~ 99, default: 12]
                I:upgradeCost1=12

                # Cost for the inventory II upgrade in levels. (synced from server) [range: 1 ~ 99, default: 20]
                I:upgradeCost2=20

                # Cost for the inventory III upgrade in levels. (synced from server) [range: 1 ~ 99, default: 32]
                I:upgradeCost3=32
            }

            step_assist {
                # Number of levels required for the 'Step Assist' upgrade. (synced from server) [range: 1 ~ 99, default: 2]
                I:upgradeCost=2
            }

            anvil {
                # Number of levels required for the 'Anvil I' upgrade. (synced from server) [range: 1 ~ 99, default: 1]
                I:upgradeCost1=1

                # Number of levels required for the 'Anvil II' upgrade. (synced from server) [range: 1 ~ 99, default: 2]
                I:upgradeCost2=2

                # Number of levels required for the 'Anvil III' upgrade. (synced from server) [range: 1 ~ 99, default: 4]
                I:upgradeCost3=4
            }

        }

        coldfire {
            # The type of fluid required to ignite cold fire. (synced from server) [default: vapor_of_levity]
            S:fluidType=vapor_of_levity

            # The amount of fluid in mb the item can hold. (synced from server) [range: 0 ~ 2147483647, default: 1000]
            I:mbCapacity=1000

            # The amount of fluid in mb used per usage. If set to <= 0 fluid use will be disabled. (synced from server) [range: -1 ~ 2147483647, default: 10]
            I:mbPerUse=10
        }

        bow {
            # Amount of energy needed to mitigate one point of item damage. (synced from server) [range: 0 ~ 99999999, default: 1000]
            I:energyUsePerDamagePoint=1000

            # Amount of energy needed to fully draw the bow. (synced from server) [range: 0 ~ 99999999, default: 750]
            I:energyUsePerDraw=750

            # Amount of energy needed hold the bow fully draws (per tick). (synced from server) [range: 0 ~ 99999999, default: 5]
            I:energyUsePerHoldTick=5

            dark_bow {
                # Damage bonus of the Dark Steel Bow when 'Empowered I' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage1=0.0

                # Damage bonus of the Dark Steel Bow when 'Empowered II' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage2=0.0

                # Damage bonus of the Dark Steel Bow when 'Empowered III' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage3=0.0

                # Damage bonus of the Dark Steel Bow when 'Empowered IV' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage4=0.0

                # Damage bonus of the Dark Steel Bow when 'Empowered V' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage5=0.0

                # Damage bonus of the Dark Steel Bow when not empowered or out of energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damageUnpowered=0.0

                # Draw speed of the Dark Steel Bow when 'Empowered I' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 20]
                I:drawSpeed1=20

                # Draw speed of the Dark Steel Bow when 'Empowered II' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 18]
                I:drawSpeed2=18

                # Draw speed of the Dark Steel Bow when 'Empowered III' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 16]
                I:drawSpeed3=16

                # Draw speed of the Dark Steel Bow when 'Empowered IV' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 14]
                I:drawSpeed4=14

                # Draw speed of the Dark Steel Bow when 'Empowered V' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 12]
                I:drawSpeed5=12

                # Draw speed of the Dark Steel Bow when not empowered or out of energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 30]
                I:drawSpeedUnpowered=30

                # Force multiplier of the Dark Steel Bow when 'Empowered I' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.2]
                D:force1=1.2000000476837158

                # Force multiplier of the Dark Steel Bow when 'Empowered II' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.3]
                D:force2=1.2999999523162842

                # Force multiplier of the Dark Steel Bow when 'Empowered III' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.4]
                D:force3=1.399999976158142

                # Force multiplier of the Dark Steel Bow when 'Empowered IV' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.5]
                D:force4=1.5

                # Force multiplier of the Dark Steel Bow when 'Empowered V' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.6]
                D:force5=1.600000023841858

                # Force multiplier of the Dark Steel Bow when not empowered or out of energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.1]
                D:forceUnpowered=1.100000023841858

                # FOV multiplier of the Dark Steel Bow when 'Empowered I' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.3]
                D:fov1=0.30000001192092896

                # FOV multiplier of the Dark Steel Bow when 'Empowered II' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.35]
                D:fov2=0.3499999940395355

                # FOV multiplier of the Dark Steel Bow when 'Empowered III' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.4]
                D:fov3=0.4000000059604645

                # FOV multiplier of the Dark Steel Bow when 'Empowered IV' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.45]
                D:fov4=0.44999998807907104

                # FOV multiplier of the Dark Steel Bow when 'Empowered V' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.5]
                D:fov5=0.5

                # FOV multiplier of the Dark Steel Bow when not empowered or out of energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.25]
                D:fovUnpowered=0.25
            }

            end_bow {
                # Damage bonus of the End Steel Bow when 'Empowered I' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage1=0.0

                # Damage bonus of the End Steel Bow when 'Empowered II' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage2=0.0

                # Damage bonus of the End Steel Bow when 'Empowered III' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage3=0.0

                # Damage bonus of the End Steel Bow when 'Empowered IV' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage4=0.0

                # Damage bonus of the End Steel Bow when 'Empowered V' and it has energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damage5=0.0

                # Damage bonus of the End Steel Bow when not empowered or out of energy. (synced from server) [range: 0.0 ~ 30.0, default: 0.0]
                D:damageUnpowered=0.0

                # Draw speed of the End Steel Bow when 'Empowered I' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 15]
                I:drawSpeed1=15

                # Draw speed of the End Steel Bow when 'Empowered II' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 12]
                I:drawSpeed2=12

                # Draw speed of the End Steel Bow when 'Empowered III' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 11]
                I:drawSpeed3=11

                # Draw speed of the End Steel Bow when 'Empowered IV' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 10]
                I:drawSpeed4=10

                # Draw speed of the End Steel Bow when 'Empowered V' and it has energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 9]
                I:drawSpeed5=9

                # Draw speed of the End Steel Bow when not empowered or out of energy. (normal bow is 20) (synced from server) [range: 1 ~ 100, default: 20]
                I:drawSpeedUnpowered=20

                # Force multiplier of the End Steel Bow when 'Empowered I' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.35]
                D:force1=1.350000023841858

                # Force multiplier of the End Steel Bow when 'Empowered II' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.45]
                D:force2=1.4500000476837158

                # Force multiplier of the End Steel Bow when 'Empowered III' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.55]
                D:force3=1.5499999523162842

                # Force multiplier of the End Steel Bow when 'Empowered IV' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.65]
                D:force4=1.649999976158142

                # Force multiplier of the End Steel Bow when 'Empowered V' and it has energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.75]
                D:force5=1.75

                # Force multiplier of the End Steel Bow when not empowered or out of energy. (synced from server) [range: 1.0 ~ 10.0, default: 1.25]
                D:forceUnpowered=1.25

                # FOV multiplier of the End Steel Bow when 'Empowered I' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.35]
                D:fov1=0.3499999940395355

                # FOV multiplier of the End Steel Bow when 'Empowered II' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.4]
                D:fov2=0.4000000059604645

                # FOV multiplier of the End Steel Bow when 'Empowered III' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.45]
                D:fov3=0.44999998807907104

                # FOV multiplier of the End Steel Bow when 'Empowered IV' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.5]
                D:fov4=0.5

                # FOV multiplier of the End Steel Bow when 'Empowered V' and it has energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.55]
                D:fov5=0.550000011920929

                # FOV multiplier of the End Steel Bow when not empowered or out of energy. (synced from server) [range: 0.0 ~ 1.0, default: 0.3]
                D:fovUnpowered=0.30000001192092896
            }

        }

        treetap {
            # Durability of the Dark Steel Tree Tap. (synced from server) [range: 1 ~ 99999999, default: 2000]
            I:durability=2000

            # Energy use per damage/durability point avoided. (synced from server) [range: 1 ~ 99999999, default: 750]
            I:energyPerDamage=750
        }

        hand {
            I:durability=6000
            I:energyPerDamage=750
        }

        armor {
            # Base amount of power used per jump energy dark steel boots. The second jump in a 'double jump' uses 2x this etc (synced from server) [range: 1 ~ 99999999, default: 150]
            I:bootsJumpPowerCost=150

            # If true, dark steel armor will drain power stored energy in power containers in the players inventory. (synced from server) [default: false]
            B:drainPowerFromInventory=false

            # Amount of power used per block height of fall distance damage negated. [range: 1 ~ 99999999, default: 75]
            I:fallDistanceCost=75
        }

        backhoe {
            # Durability of the Dark Steel Backhoe. (synced from server) [range: 1 ~ 99999999, default: 6000]
            I:durability=6000

            # Energy use per damage/durability point avoided. (synced from server) [range: 1 ~ 99999999, default: 250]
            I:energyPerDamage=250
        }

        materials {

            dark_steel {
                # Mining level for tools made out of Dark Steel. (highest vanilla level is 3, highest TiC level is 4 by default) (synced from server) [range: 0 ~ 2147483647, default: 4]
                I:miningLevel=4
            }

            end_steel {
                # Mining level for tools made out of End Steel. (highest vanilla level is 3, highest TiC level is 4 by default) (synced from server) [range: 0 ~ 2147483647, default: 5]
                I:miningLevel=5
            }

            stellar_alloy {
                # Mining level for tools made out of Stellar Alloy. (highest vanilla level is 3, highest TiC level is 4 by default) (synced from server) [range: 0 ~ 2147483647, default: 8]
                I:miningLevel=8
            }

        }

    }

    infinitypowder {
        D:dropChance=0.5
        D:dropChanceFirewater=0.02500000037252903

        # Chance that Infinity Powder will drop from creatures that were spawned by Infinity Fog. (0 to disable) (synced from server) [range: 0.0 ~ 1.0, default: 0.314]
        D:dropChanceFogCreatures=0.3140000104904175
        I:dropStackSize=1

        # Should making Infinity Powder be allowed in all dimensions? If not, it'll only work in the worlds configured in enableInDimensions. (synced from server) [default: false]
        B:enableInAllDimensions=false

        # In which dimensions (numeric IDs) should Infinity Powder making be allowed? This is ignored if enableInAllDimensions is enabled. (synced from server) [range: -2147483648 ~ 2147483647, default: [I@7757bc3e]
        I:enableInDimensions <
            0
         >

        # How old (in ticks) does a dying fire have to be to spawn Infinity Powder? (average fire age at death is 11.5s, default is 13s (synced from server) [range: 1 ~ 1000, default: 260]
        I:fireMinAge=260

        # Should making Infinity Powder be enabled? Please note that you need to provide an alternative way of crafting it if you disable this. (synced from server) [default: true]
        B:inWorldCraftingEnabled=true

        # Should making Infinity Powder by lighting bedrock on fire be enabled? (no effect if inWorldCraftingEnabled is off) (synced from server) [default: true]
        B:inWorldCraftingFireEnabled=true

        # Should making Infinity Powder by putting Firewater on bedrock be enabled? (no effect if inWorldCraftingEnabled is off) (synced from server) [default: true]
        B:inWorldCraftingFireWaterEnabled=true

        # Blocks that should be considered infinite and can be used to split off Infinity Powder from. (synced from server) [default: [minecraft:bedrock]]
        S:infiniteBlocks <
            minecraft:bedrock
         >

        # Should it make a sound when Infinity Powder drops from fire? [default: true]
        B:makesSound=true
    }

    deathpouch {
        # Determine if the Death Urn is used up when activated. (synced from server) [default: true]
        B:consumeDeathUrnOnUse=true

        # Disables the Death Urn completely. Don't forget to disable the item recipe when you enable this. (synced from server) [default: false]
        B:disableDeathUrn=true

        # Determine if a Death Urn item is needed to create a grave. Don't forget to disable the item recipe when you enable this. (synced from server) [default: false]
        B:freeGraves=false

        # Determine if a Death Urn can be looted by everone or only by the owner. Creative mode players can loot them always. (synced from server) [default: true]
        B:protectedGraves=true
    }

}


machines {
    # When a machine doesn't find a recipe for its inputs, how long (in ticks) should it wait until retrying? Increasing this can increase tps on bigger servers but will create awkward pauses until machines (re-)start after being idle or out of power. (synced from server) [range: 5 ~ 600, default: 20]
    I:sleepBetweenFailedTries=20
}


personal {
    # Alpha (transparency) for the GUI background branding. [range: 0.02 ~ 1.0, default: 0.05]
    D:GUIBrandingAlpha=0.05000000074505806

    # Should the GUI background be branded? [default: true]
    B:GUIBrandingEnabled=true

    # Texture for the GUI background branding. [default: enderio:textures/items/item_enderface_none.png]
    S:GUIBrandingTexture=enderio:textures/items/item_enderface_none.png

    # Number of tiles for the GUI background branding. [range: 1 ~ 64, default: 2]
    I:GUIBrandingTiles=2

    # Should the Ender Armor texture be animated? [default: true]
    B:animatedEnderArmorEnabled=true

    # Should the Gear item be animated? [default: true]
    B:animatedGears=true

    # Should the Yeta wrench rotate in Third-person view? [default: true]
    B:animatedYeta=true

    # Should the annoying new candy colors be used for Fused Glass/Quartz? [default: false]
    B:candyColors=false

    # Celebrate Christmas? [default: true]
    B:celebrateChristmas=true

    # Celebrate (western calendar) New Year? (synced from server) [default: true]
    B:celebrateNewYear=true

    # Celebrate St Nicholas' Day? (synced from server) [default: true]
    B:celebrateNicholas=true

    # Celebrate Reformation Day? (synced from server) [default: true]
    B:celebrateReformation=true

    # Celebrate the International Space Day? [default: true]
    B:celebrateSpaceDay=true

    # Valid values are between 2-5, smallest conduits at 2, largest at 5. (must be kept in sync with server) [range: 2 ~ 5, default: 3]
    I:conduitPixels=3

    # If true, machines will make particles. This has no effect on entities and important particles like Concussion TNT's explosion. [default: true]
    B:machineParticlesEnabled=true

    # If true, machines will make sounds. [default: true]
    B:machineSoundsEnabled=true

    # Volume of machine sounds. [range: -Infinity ~ 3.4028235E38, default: 1.0]
    D:machineSoundsVolume=1.0

    # Should the annoying recipe button be always disabled? [default: false]
    B:recipeButtonDisableAlways=false

    # Should the annoying recipe button be disabled if JEI is installed? (no effect is recipeButtonReplaceWithJei is set) [default: false]
    B:recipeButtonDisableWithJei=false

    # Should the JEI recipe button in the machine GUIs use the vanilla icon? [default: true]
    B:recipeButtonInMachineGuis=false

    # Should the annoying recipe button be replaced with a JEI recipe button if JEI is installed? [default: true]
    B:recipeButtonReplaceWithJei=true

    # What kind of overlay to use when holding the yeta wrench
    # 
    # 0 - Sideways scrolling in center of screen
    # 1 - Vertical icon bar in bottom right
    # 2 - Old-style group of icons in bottom right [range: 0 ~ 2, default: 0]
    I:yetaOverlayMode=0

    # If true, shift-mouse wheel will change the conduit display mode when the YetaWrench is equipped. [default: true]
    B:yetaUseSneakMouseWheel=true

    # If true, shift-clicking the YetaWrench on a null or non wrenchable object will change the conduit display mode. [default: false]
    B:yetaUseSneakRightClick=false

    hiding {
        # If true, nothing will be hidden in JEI regardless of the xml configuration for ingredient hiding. [default: false]
        B:disableHiding=false
        B:hideConduits=true
        B:hideEndergy=true
        B:hideInfinity=true
        B:hideMachineParts=true
        B:hideMaterialBlocks=true
        B:hideMaterials=true
        B:hideMobDrops=true
        B:hideTEMaterials=true
        B:hideTiCMaterials=true
        B:hideToolsAndArmor=true
        B:hideTreetap=true
    }

    tooltips {
        # If true, adds energy value and burn time tooltips to fluid containers with liquid fuel. [default: true]
        B:enableFluidContainerFuelTooltip=true

        # If true, adds burn duration tooltips to furnace fuels. [default: true]
        B:enableFurnaceFuelTooltip=true

        # Should paintable (and painted) items have a tooltip showing their paint information? Possible values are ALWAYS, NEVER and AUTO. The latter will only show tooltips if there is some way to paint items available (e.g. the Painting Machine). [default: AUTO]
        S:enablePainterTooltip=AUTO
    }

    loot {
        # Selects which loot table configurations are injected for dungeon loot. Possible values are:
        # - VANILLA (inject standard loot tables from the mod jar and/or world folder), \n- DEVELOPMENT (inject programmatic tables used in development) and \n- DISABLED (don't add any loot tables).\nPlease don't use DEVELOPMENT, those tables are only templates we use to create the real ones. (synced from server) [default: VANILLA]
        S:generation=VANILLA
    }

}


recipe {
    # When disabled the XML recipe files that come built-in with Ender IO will not be loaded. Only user supplied files (in the 'recipes/user' folder) will be loaded. YOU MUST SUPPLY THE RECIPES ENDER IO NEEDS TO WORK YOURSELF IF YOU DO SO. (synced from server) [default: true]
    B:loadCoreRecipes=true

    painter {
        # When enabled, blocks with tile entities (e.g. machines) can be used as paint targets. (synced from server) [default: true]
        B:allowTileEntitiesAsPaintSource=true

        # Painting cobblestone costs this much in relation to 'energyPerTask'. (synced from server) [range: 0.001 ~ 1000.0, default: 3.0]
        D:energyFactorForCobblestone=3.0

        # Painting Reinforced Obsidian costs this much in relation to 'energyPerTask'. (synced from server) [range: 0.001 ~ 1000.0, default: 10.0]
        D:energyFactorForReinforcedObsidian=10.0

        # Painting a workbench (crafting table) costs this in relation to than 'energyPerTask'. (synced from server) [range: 1.0 ~ 1000.0, default: 50.0]
        D:energyFactorForWorkbench=50.0

        # The total amount of energy required to paint one block. (synced from server) [range: 1 ~ 1000000, default: 2000]
        I:energyPerTask=2000
    }

    alloy {
        # Automatically create alloy smelter recipes with double and triple inputs and different slot allocations (1+1+1, 2+1, 1+2, 3 and 2) for single-input recipes. (synced from server) [default: true]
        B:createSyntheticRecipes=true
    }

    lootcap {
        # Base level increase when combining Loot Capacitors. (synced from server) [range: 0.1 ~ 9.0, default: 1.0]
        D:baseLevelIncrement=1.0

        # Chance that base level increases when combining Loot Capacitors. (synced from server) [range: 0.001 ~ 1.0, default: 0.5]
        D:baseLevelIncrementChance=0.5

        # Maximum reachable base level when combining Loot Capacitors. (synced from server) [range: 0.1 ~ 9.9, default: 5.5]
        D:baseLevelIncrementMax=5.5

        # Allow Loot Capacitors to be combined in an Anvil. (synced from server) [default: true]
        B:enableLootCapCombining=true

        # Facor to the level cost when combining Loot Capacitors. (synced from server) [range: 0.1 ~ 10.0, default: 1.0]
        D:levelCostFactor=1.0

        # Do Loot Capacitors have to be of the same type to be combined in an Anvil? (synced from server) [default: true]
        B:requireSameType=true

        # Bias to the speciality level change when combining Loot Capacitors. (synced from server) [range: -0.25 ~ 0.25, default: 0.0]
        D:specialityLevelBias=0.0

        # Maximum reachable speciality level when combining Loot Capacitors. (synced from server) [range: 0.1 ~ 9.9, default: 5.75]
        D:specialityLevelMax=5.75

        # Minimum reachable speciality level when combining Loot Capacitors. (synced from server) [range: 0.1 ~ 9.9, default: 0.1]
        D:specialityLevelMin=0.10000000149011612
    }

}


teleport {
    # Can direct travel between blocks (e.g. Travel Anchors) be activated by jumping? (at least one of activateSneak/activateJump must be enabled) [default: true]
    B:activateJump=true

    # Can direct travel between blocks (e.g. Travel Anchors) be activated by sneaking? (at least one of activateSneak/activateJump must be enabled) [default: true]
    B:activateSneak=true

    # Default energy cost per block of distance of travel using an item (e.g. Staff blinking). (synced from server) [range: 0.0 ~ 999999.0, default: 250.0]
    D:defaultTeleportEnergyCostItem=250.0

    # Default energy cost per block of distance of travel using an item to a block (e.g. Staff to Travel Anchors). (synced from server) [range: 0.0 ~ 999999.0, default: 250.0]
    D:defaultTeleportEnergyCostItemToBlock=250.0

    # Default range of direct travel between blocks (e.g. Travel Anchors). (synced from server) [range: 16 ~ 512, default: 96]
    I:defaultTeleportRangeBlocks=96

    # Default range of travel using an item (e.g. Staff blinking). (synced from server) [range: 4 ~ 512, default: 16]
    I:defaultTeleportRangeItem=16

    # Default range of travel using an item to a block (e.g. Staff to Travel Anchors). (synced from server) [range: 16 ~ 512, default: 256]
    I:defaultTeleportRangeItemToBlock=256

    # Visual size of possible targets when travelling to blocks. [range: 0.01 ~ 1.0, default: 0.2]
    D:visualScale=0.20000000298023224
}


top {
    # If true, 'The One Probe' by McJty will be supported. (synced from server) [default: true]
    B:enabled=true

    # If true, the channel list will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: false]
    B:showChannelsByDefault=false

    # If true, the item count will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: true]
    B:showItemCountDefault=true

    # If true, the mob list will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: true]
    B:showMobsByDefault=true

    # If true, the power level will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: true]
    B:showPowerByDefault=true

    # If true, the progress will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: true]
    B:showProgressByDefault=true

    # If true, the range will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: false]
    B:showRangeByDefault=false

    # If true, the resdstone status will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: false]
    B:showRedstoneByDefault=false

    # If true, the side config will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: false]
    B:showSideConfigByDefault=false

    # If true, the tank content will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: true]
    B:showTanksByDefault=true

    # If true, the XP level will be shown always, otherwise only it will only be shown on 'extended' mode (e.g. with shift pressed). (synced from server) [default: true]
    B:showXPByDefault=true
}


